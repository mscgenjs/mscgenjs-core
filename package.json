{
  "name": "mscgenjs",
  "version": "4.0.1",
  "description": "Sequence chart rendering library",
  "main": "dist/cjs/index.js",
  "module": "dist/es2015/index.js",
  "sideEffects": false,
  "files": [
    "dist/",
    "types/",
    "COPYING",
    "LICENSE.md",
    "package.json",
    "README.md"
  ],
  "dependencies": {
    "lodash.assign": "4.2.0",
    "lodash.clonedeep": "4.5.0",
    "lodash.flatten": "4.4.0",
    "lodash.memoize": "4.1.2"
  },
  "devDependencies": {
    "@types/jest": "24.0.19",
    "@types/node": "12.11.7",
    "chai": "4.2.0",
    "chai-xml": "0.3.2",
    "dependency-cruiser": "5.2.2",
    "jest": "24.9.0",
    "jest-json-schema": "2.1.0",
    "jsdom": "15.2.0",
    "npm-run-all": "4.1.5",
    "pegjs": "0.10.0",
    "requirejs": "2.3.6",
    "shx": "0.3.2",
    "ts-jest": "23.1.4",
    "ts-loader": "6.2.1",
    "tslint": "5.20.0",
    "typescript": "3.6.4",
    "upem": "3.1.2",
    "webpack": "4.41.2",
    "webpack-cli": "3.3.9"
  },
  "upem": {
    "donotup": [
      {
        "package": "ts-jest",
        "because": "upgrading to the next version makes tests crash with all kinds of weird type errors - maybe investigate some day"
      }
    ]
  },
  "scripts": {
    "build": "npm-run-all build:clean build:prereq --parallel build:es2015 build:cjs build:bundle",
    "build:prereq": "npm-run-all --parallel build:csstemplates build:compile:pegjs build:extractversion",
    "build:es2015": "npm-run-all build:es2015:clean build:es2015:copy build:es2015:compile:typescript",
    "build:cjs": "npm-run-all build:cjs:clean build:cjs:copy build:cjs:compile:typescript",
    "build:bundle": "webpack",
    "build:clean": "npm-run-all --parallel build:cjs:clean build:es2015:clean build:clean:parse build:clean:csstemplates",
    "build:clean:csstemplates": "shx rm -f src/render/graphics/csstemplates.json",
    "build:clean:parse": "shx rm -rf src/parse/*parser.js",
    "build:csstemplates": "node utl/to-csstemplates-js.utility.js > src/render/graphics/csstemplates.json",
    "build:compile:pegjs": "npm-run-all --parallel build:compile:pegjs:mscgen build:compile:pegjs:msgenny build:compile:pegjs:xu",
    "build:compile:pegjs:mscgen": "pegjs --extra-options-file config/.pegjs-config.json -o src/parse/mscgenparser.js src/parse/peg/mscgenparser.pegjs",
    "build:compile:pegjs:msgenny": "pegjs --extra-options-file config/.pegjs-config.json -o src/parse/msgennyparser.js src/parse/peg/msgennyparser.pegjs",
    "build:compile:pegjs:xu": "pegjs --extra-options-file config/.pegjs-config.json -o src/parse/xuparser.js src/parse/peg/xuparser.pegjs",
    "build:extractversion": "node utl/create-stripped-packagejson.utility.js > src/version.json",
    "build:cjs:clean": "shx rm -rf dist/cjs/*",
    "build:cjs:compile:typescript": "tsc --project src/tsconfig.cjs.json",
    "build:cjs:copy": "npm-run-all build:cjs:copy:mkdir --parallel build:cjs:copy:parser build:cjs:copy:csstemplates build:cjs:copy:version",
    "build:cjs:copy:mkdir": "shx mkdir -p dist/cjs/parse dist/cjs/render/graphics",
    "build:cjs:copy:parser": "shx cp src/parse/*.js* dist/cjs/parse",
    "build:cjs:copy:csstemplates": "shx cp src/render/graphics/csstemplates.json dist/cjs/render/graphics/csstemplates.json",
    "build:cjs:copy:version": "shx cp src/version.json dist/cjs/.",
    "build:es2015:clean": "shx rm -rf dist/es2015/*",
    "build:es2015:compile:typescript": "tsc --project src/tsconfig.es2015.json",
    "build:es2015:copy": "npm-run-all build:es2015:copy:mkdir --parallel build:es2015:copy:parser build:es2015:copy:csstemplates build:es2015:copy:version",
    "build:es2015:copy:mkdir": "shx mkdir -p dist/es2015/parse dist/es2015/render/graphics",
    "build:es2015:copy:parser": "shx cp src/parse/*.js* dist/es2015/parse",
    "build:es2015:copy:csstemplates": "shx cp src/render/graphics/csstemplates.json dist/es2015/render/graphics/csstemplates.json",
    "build:es2015:copy:version": "shx cp src/version.json dist/es2015/.",
    "check": "npm-run-all depcruise lint test:all",
    "check:ci": "npm-run-all depcruise lint test:all:ci",
    "check:full": "npm-run-all --parallel depcruise lint test:cover",
    "depcruise": "depcruise --validate -- src test",
    "depcruise:graph": "npm-run-all --parallel depcruise:graph:*",
    "depcruise:graph:html": "depcruise --exclude \"node_modules|\\.d\\.ts\" --validate --output-type dot src | dot -T svg | cat docs/assets/depcruise-graph-head.snippet.html - docs/assets/depcruise-graph-foot.snippet.html > docs/dependencygraph.html",
    "depcruise:graph:png": "depcruise --exclude \"node_modules|\\.d\\.ts\" --validate --output-type dot src | dot -Gdpi=192 -T png | pngquant - > docs/dependencygraph.png",
    "lint": "tslint --project .",
    "lint:fix": "tslint --fix --project .",
    "prepublishOnly": "npm run check",
    "scm:push": "run-p --aggregate-output scm:push:*",
    "scm:push:github": "run-p --aggregate-output scm:push:github:*",
    "scm:push:github:commits": "git push",
    "scm:push:github:tags": "git push --tags",
    "scm:push:gitlab-mirror": "run-p --aggregate-output scm:push:gitlab-mirror:*",
    "scm:push:gitlab-mirror:commits": "git push gitlab-mirror",
    "scm:push:gitlab-mirror:tags": "git push --tags gitlab-mirror",
    "scm:push:bitbucket-mirror": "run-p --aggregate-output scm:push:bitbucket-mirror:*",
    "scm:push:bitbucket-mirror:commits": "git push bitbucket-mirror",
    "scm:push:bitbucket-mirror:tags": "git push --tags bitbucket-mirror",
    "scm:stage": "git add .",
    "version": "npm-run-all build depcruise:graph scm:stage",
    "test": "jest --onlyChanged --collectCoverage false",
    "test:all": "jest --collectCoverage false",
    "test:all:ci": "jest --collectCoverage false --runInBand # runInBand (=sequentially) so node 6 on travis doesn't hang",
    "test:cover": "jest",
    "update-dependencies": "npm-run-all upem:update upem:install build lint:fix check:full",
    "upem:update": "npm outdated --json | upem",
    "upem:install": "npm install",
    "watch": "tsc --project src/tsconfig.cjs.json --watch"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mscgenjs/mscgenjs-core"
  },
  "author": "Sander Verweij",
  "license": "GPL-3.0",
  "keywords": [
    "mscgen",
    "sequence chart",
    "sequence diagram",
    "xu",
    "msgenny"
  ],
  "jest": {
    "moduleFileExtensions": [
      "ts",
      "js"
    ],
    "transform": {
      "\\.(ts)$": "ts-jest"
    },
    "testRegex": "test.*\\.spec\\.(ts|js)$",
    "testURL": "http://localhost",
    "collectCoverage": true,
    "coverageReporters": [
      "text-summary",
      "html",
      "lcov"
    ],
    "collectCoverageFrom": [
      "src/index.ts",
      "src/index-lazy.ts",
      "src/main/**/*.ts",
      "src/parse/**/*.ts",
      "src/render/**/*.ts"
    ],
    "coveragePathIgnorePatterns": [
      ".+\\.d\\.ts$",
      "src/render/graphics/styling",
      "src/render/graphics/svgelementfactory/wobbly",
      "src/parse/.+parser\\.js"
    ],
    "coverageThreshold": {
      "global": {
        "statements": 100,
        "branches": 93.8,
        "functions": 100,
        "lines": 100
      },
      "src/main": {
        "statements": 100,
        "branches": 100,
        "functions": 100,
        "lines": 100
      },
      "src/render": {
        "statements": 100,
        "branches": 92,
        "functions": 100,
        "lines": 100
      },
      "src/parse": {
        "statements": 100,
        "branches": 100,
        "functions": 100,
        "lines": 100
      }
    }
  },
  "engines": {
    "node": "^8.10||^10||>=12"
  },
  "types": "./types/mscgen.d.ts",
  "bugs": {
    "url": "https://github.com/mscgenjs/mscgenjs-core/issues"
  },
  "homepage": "https://github.com/mscgenjs/mscgenjs-core"
}
